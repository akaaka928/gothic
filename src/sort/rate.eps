%!PS-Adobe-2.0 EPSF-2.0
%%Title: rate.eps
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Thu Jul 30 20:05:42 2015
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -83 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (rate.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (ymiki)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu Jul 30 20:05:42 2015)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 250 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
925 800 M
5824 0 V
stroke
LTb
925 800 M
63 0 V
5761 0 R
-63 0 V
stroke
775 800 M
[ [(Helvetica) 250.0 0.0 true true 0 (10)]
[(Helvetica) 200.0 125.0 true true 0 (5)]
] -108.3 MRshow
1.000 UL
LTb
925 1096 M
31 0 V
5793 0 R
-31 0 V
925 1270 M
31 0 V
5793 0 R
-31 0 V
925 1393 M
31 0 V
5793 0 R
-31 0 V
925 1488 M
31 0 V
5793 0 R
-31 0 V
925 1566 M
31 0 V
5793 0 R
-31 0 V
925 1632 M
31 0 V
5793 0 R
-31 0 V
925 1689 M
31 0 V
5793 0 R
-31 0 V
925 1740 M
31 0 V
5793 0 R
-31 0 V
stroke
LTa
925 1785 M
961 0 V
4713 0 R
150 0 V
stroke
LTb
925 1785 M
63 0 V
5761 0 R
-63 0 V
stroke
775 1785 M
[ [(Helvetica) 250.0 0.0 true true 0 (10)]
[(Helvetica) 200.0 125.0 true true 0 (6)]
] -108.3 MRshow
1.000 UL
LTb
925 2081 M
31 0 V
5793 0 R
-31 0 V
925 2255 M
31 0 V
5793 0 R
-31 0 V
925 2378 M
31 0 V
5793 0 R
-31 0 V
925 2473 M
31 0 V
5793 0 R
-31 0 V
925 2551 M
31 0 V
5793 0 R
-31 0 V
925 2617 M
31 0 V
5793 0 R
-31 0 V
925 2674 M
31 0 V
5793 0 R
-31 0 V
925 2724 M
31 0 V
5793 0 R
-31 0 V
stroke
LTa
925 2770 M
5824 0 V
stroke
LTb
925 2770 M
63 0 V
5761 0 R
-63 0 V
stroke
775 2770 M
[ [(Helvetica) 250.0 0.0 true true 0 (10)]
[(Helvetica) 200.0 125.0 true true 0 (7)]
] -108.3 MRshow
1.000 UL
LTb
925 3066 M
31 0 V
5793 0 R
-31 0 V
925 3239 M
31 0 V
5793 0 R
-31 0 V
925 3362 M
31 0 V
5793 0 R
-31 0 V
925 3458 M
31 0 V
5793 0 R
-31 0 V
925 3536 M
31 0 V
5793 0 R
-31 0 V
925 3602 M
31 0 V
5793 0 R
-31 0 V
925 3659 M
31 0 V
5793 0 R
-31 0 V
925 3709 M
31 0 V
5793 0 R
-31 0 V
stroke
LTa
925 3754 M
5824 0 V
stroke
LTb
925 3754 M
63 0 V
5761 0 R
-63 0 V
stroke
775 3754 M
[ [(Helvetica) 250.0 0.0 true true 0 (10)]
[(Helvetica) 200.0 125.0 true true 0 (8)]
] -108.3 MRshow
1.000 UL
LTb
925 4051 M
31 0 V
5793 0 R
-31 0 V
925 4224 M
31 0 V
5793 0 R
-31 0 V
925 4347 M
31 0 V
5793 0 R
-31 0 V
925 4443 M
31 0 V
5793 0 R
-31 0 V
925 4521 M
31 0 V
5793 0 R
-31 0 V
925 4586 M
31 0 V
5793 0 R
-31 0 V
925 4644 M
31 0 V
5793 0 R
-31 0 V
925 4694 M
31 0 V
5793 0 R
-31 0 V
stroke
LTa
925 4739 M
5824 0 V
stroke
LTb
925 4739 M
63 0 V
5761 0 R
-63 0 V
stroke
775 4739 M
[ [(Helvetica) 250.0 0.0 true true 0 (10)]
[(Helvetica) 200.0 125.0 true true 0 (9)]
] -108.3 MRshow
1.000 UL
LTb
1.000 UL
LTa
925 800 M
0 3939 V
stroke
LTb
925 800 M
0 63 V
0 3876 R
0 -63 V
stroke
925 550 M
[ [(Helvetica) 250.0 0.0 true true 0 (10)]
[(Helvetica) 200.0 125.0 true true 0 (2)]
] -108.3 MCshow
1.000 UL
LTb
1217 800 M
0 31 V
0 3908 R
0 -31 V
1603 800 M
0 31 V
0 3908 R
0 -31 V
1802 800 M
0 31 V
0 3908 R
0 -31 V
stroke
LTa
1896 800 M
0 63 V
0 1000 R
0 2876 V
stroke
LTb
1896 800 M
0 63 V
0 3876 R
0 -63 V
stroke
1896 550 M
[ [(Helvetica) 250.0 0.0 true true 0 (10)]
[(Helvetica) 200.0 125.0 true true 0 (3)]
] -108.3 MCshow
1.000 UL
LTb
2188 800 M
0 31 V
0 3908 R
0 -31 V
2574 800 M
0 31 V
0 3908 R
0 -31 V
2772 800 M
0 31 V
0 3908 R
0 -31 V
stroke
LTa
2866 800 M
0 63 V
0 1000 R
0 2876 V
stroke
LTb
2866 800 M
0 63 V
0 3876 R
0 -63 V
stroke
2866 550 M
[ [(Helvetica) 250.0 0.0 true true 0 (10)]
[(Helvetica) 200.0 125.0 true true 0 (4)]
] -108.3 MCshow
1.000 UL
LTb
3159 800 M
0 31 V
0 3908 R
0 -31 V
3545 800 M
0 31 V
0 3908 R
0 -31 V
3743 800 M
0 31 V
0 3908 R
0 -31 V
stroke
LTa
3837 800 M
0 63 V
0 1000 R
0 2876 V
stroke
LTb
3837 800 M
0 63 V
0 3876 R
0 -63 V
stroke
3837 550 M
[ [(Helvetica) 250.0 0.0 true true 0 (10)]
[(Helvetica) 200.0 125.0 true true 0 (5)]
] -108.3 MCshow
1.000 UL
LTb
4129 800 M
0 31 V
0 3908 R
0 -31 V
4515 800 M
0 31 V
0 3908 R
0 -31 V
4714 800 M
0 31 V
0 3908 R
0 -31 V
stroke
LTa
4808 800 M
0 63 V
0 1000 R
0 2876 V
stroke
LTb
4808 800 M
0 63 V
0 3876 R
0 -63 V
stroke
4808 550 M
[ [(Helvetica) 250.0 0.0 true true 0 (10)]
[(Helvetica) 200.0 125.0 true true 0 (6)]
] -108.3 MCshow
1.000 UL
LTb
5100 800 M
0 31 V
0 3908 R
0 -31 V
5486 800 M
0 31 V
0 3908 R
0 -31 V
5684 800 M
0 31 V
0 3908 R
0 -31 V
stroke
LTa
5778 800 M
0 63 V
0 1000 R
0 2876 V
stroke
LTb
5778 800 M
0 63 V
0 3876 R
0 -63 V
stroke
5778 550 M
[ [(Helvetica) 250.0 0.0 true true 0 (10)]
[(Helvetica) 200.0 125.0 true true 0 (7)]
] -108.3 MCshow
1.000 UL
LTb
6071 800 M
0 31 V
0 3908 R
0 -31 V
6457 800 M
0 31 V
0 3908 R
0 -31 V
6655 800 M
0 31 V
0 3908 R
0 -31 V
stroke
LTa
6749 800 M
0 3939 V
stroke
LTb
6749 800 M
0 63 V
0 3876 R
0 -63 V
stroke
6749 550 M
[ [(Helvetica) 250.0 0.0 true true 0 (10)]
[(Helvetica) 200.0 125.0 true true 0 (8)]
] -108.3 MCshow
1.000 UL
LTb
1.000 UL
LTb
925 4739 N
925 800 L
5824 0 V
0 3939 V
-5824 0 V
Z stroke
LCb setrgbcolor
200 2769 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 250.0 0.0 true true 0 (Sorting rate \(keys / sec\))]
] -83.3 MCshow
grestore
LTb
LCb setrgbcolor
3837 175 M
[ [(Helvetica) 250.0 0.0 true true 0 (# of keys)]
] -83.3 MCshow
LTb
1.000 UP
1.000 UL
LTb
% Begin plot #1
3.000 UL
LTa
1.00 0.00 1.00 C LCb setrgbcolor
5636 1738 M
[ [(Helvetica) 250.0 0.0 true true 0 (thrust::sort)]
] -83.3 MRshow
LTa
1.00 0.00 1.00 C 5786 1738 M
663 0 V
1029 1310 M
292 193 V
292 428 V
293 298 V
292 293 V
292 297 V
292 297 V
292 290 V
293 487 V
292 -43 V
292 261 V
292 162 V
292 104 V
293 101 V
292 51 V
292 27 V
292 16 V
292 8 V
293 6 V
% End plot #1
% Begin plot #2
2.000 UP
stroke
1.000 UL
LT3
1029 1310 Crs
1321 1503 Crs
1613 1931 Crs
1906 2229 Crs
2198 2522 Crs
2490 2819 Crs
2782 3116 Crs
3074 3406 Crs
3367 3893 Crs
3659 3850 Crs
3951 4111 Crs
4243 4273 Crs
4535 4377 Crs
4828 4478 Crs
5120 4529 Crs
5412 4556 Crs
5704 4572 Crs
5996 4580 Crs
6289 4586 Crs
% End plot #2
% Begin plot #3
3.000 UL
LT4
0.00 0.00 1.00 C LCb setrgbcolor
5636 1488 M
[ [(Helvetica) 250.0 0.0 true true 0 (thrust::stable_sort)]
] -83.3 MRshow
LT4
0.00 0.00 1.00 C 5786 1488 M
663 0 V
1029 1338 M
292 193 V
292 413 V
293 283 V
292 296 V
292 296 V
292 292 V
292 291 V
293 489 V
292 -4 V
292 228 V
292 158 V
292 99 V
293 106 V
292 48 V
292 30 V
292 17 V
292 7 V
293 5 V
% End plot #3
% Begin plot #4
2.000 UP
stroke
1.000 UL
LT2
1029 1338 Circle
1321 1531 Circle
1613 1944 Circle
1906 2227 Circle
2198 2523 Circle
2490 2819 Circle
2782 3111 Circle
3074 3402 Circle
3367 3891 Circle
3659 3887 Circle
3951 4115 Circle
4243 4273 Circle
4535 4372 Circle
4828 4478 Circle
5120 4526 Circle
5412 4556 Circle
5704 4573 Circle
5996 4580 Circle
6289 4585 Circle
% End plot #4
% Begin plot #5
3.000 UL
LT2
0.00 0.00 0.00 C LCb setrgbcolor
5636 1238 M
[ [(Helvetica) 250.0 0.0 true true 0 (original \(2 kernels mode\))]
] -83.3 MRshow
LT2
0.00 0.00 0.00 C 5786 1238 M
663 0 V
1029 2696 M
292 -415 V
292 313 V
293 292 V
292 300 V
292 290 V
292 133 V
292 -3 V
293 57 V
292 -33 V
292 92 V
292 -35 V
292 79 V
293 -77 V
292 78 V
292 -74 V
292 68 V
292 -71 V
293 64 V
% End plot #5
% Begin plot #6
2.000 UP
stroke
1.000 UL
LTa
1029 2696 Pls
1321 2281 Pls
1613 2594 Pls
1906 2886 Pls
2198 3186 Pls
2490 3476 Pls
2782 3609 Pls
3074 3606 Pls
3367 3663 Pls
3659 3630 Pls
3951 3722 Pls
4243 3687 Pls
4535 3766 Pls
4828 3689 Pls
5120 3767 Pls
5412 3693 Pls
5704 3761 Pls
5996 3690 Pls
6289 3754 Pls
% End plot #6
% Begin plot #7
3.000 UL
LT0
1.00 0.00 0.00 C LCb setrgbcolor
5636 988 M
[ [(Helvetica) 250.0 0.0 true true 0 (original \(1 kernel mode\))]
] -83.3 MRshow
LT0
1.00 0.00 0.00 C 5786 988 M
663 0 V
1029 2697 M
292 -398 V
292 292 V
293 300 V
292 295 V
292 290 V
292 78 V
292 55 V
293 98 V
292 -15 V
292 118 V
292 -55 V
292 86 V
293 -51 V
292 55 V
292 -49 V
292 48 V
292 -50 V
293 45 V
% End plot #7
% Begin plot #8
2.000 UP
stroke
1.000 UL
LT0
1029 2697 Box
1321 2299 Box
1613 2591 Box
1906 2891 Box
2198 3186 Box
2490 3476 Box
2782 3554 Box
3074 3609 Box
3367 3707 Box
3659 3692 Box
3951 3810 Box
4243 3755 Box
4535 3841 Box
4828 3790 Box
5120 3845 Box
5412 3796 Box
5704 3844 Box
5996 3794 Box
6289 3839 Box
% End plot #8
1.000 UL
LTb
925 4739 N
925 800 L
5824 0 V
0 3939 V
-5824 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
