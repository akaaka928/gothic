#################################################################################################
# last updated on 2015/11/10(Tue) 15:47:21
# Makefile for CUDA/C Programming
# Radix sort library
#################################################################################################


#################################################################################################
## Overall options
USEDBG	:= 0
USEDP	:= 0
MKOPREP	:= 0
USEPAPI	:= 0
VERBOSE	:=
# VERBOSE	:= @
#################################################################################################
## Macros for Pre-Processor
DEBUG	:= -DNDEBUG
# PROFILE	:= -pg
#################################################################################################
ifeq ($(USEPAPI), 0)
PAPIOPT	:=
endif
#################################################################################################


#################################################################################################
HUNT_OPTIMAL_PARAMETER_SETS	:= 0
CHECK_MORE_BITS_PER_STEP	:= 0
PREFERR_SHARED_MEMORY_GLOBAL	:= 0
USE_WARP_SHUFFLE_INSTRUCTION	:= 0
USE_MASK_INSTEAD_OF_IF_BRANCH	:= 0
USE_SPLITTED_LSD_SORT	:= 0
USE_SINGLE_LSD_SORT	:= 0
USE_SLICED_MSD_SORT	:= 0
USE_SPLITTED_MSD_SORT	:= 0
#################################################################################################
ALGORITHM	:= 0
ifeq ($(ALGORITHM), 1)
USE_SPLITTED_MSD_SORT	:= 1
endif
ifeq ($(ALGORITHM), 2)
USE_SLICED_MSD_SORT	:= 1
endif
ifeq ($(ALGORITHM), 3)
USE_SINGLE_LSD_SORT	:= 1
endif
ifeq ($(ALGORITHM), 4)
USE_SPLITTED_LSD_SORT	:= 1
endif
#################################################################################################
NUM_NTHREADS	:= 512
NUM_ELEMENTS	:= 4
#################################################################################################
ifeq ($(HUNT_OPTIMAL_PARAMETER_SETS), 1)
CCARG	+= -DNTHREADS_SORT="($(NUM_NTHREADS))" -DSORT_ELEMENTS_PER_THREAD="($(NUM_ELEMENTS))"
CUARG	+= -DNTHREADS_SORT="($(NUM_NTHREADS))" -DSORT_ELEMENTS_PER_THREAD="($(NUM_ELEMENTS))"
ifeq ($(CHECK_MORE_BITS_PER_STEP), 0)
CCARG	+= -DCHECK_2BITS
CUARG	+= -DCHECK_2BITS
endif
ifeq ($(PREFERR_SHARED_MEMORY_GLOBAL), 1)
CCARG	+= -DSMEM_PREF_FOR_GLOBAL_SORT
CUARG	+= -DSMEM_PREF_FOR_GLOBAL_SORT
endif
ifeq ($(USE_WARP_SHUFFLE_INSTRUCTION), 1)
CCARG	+= -DUSE_WARP_SHUFFLE_FUNC_SORT
CUARG	+= -DUSE_WARP_SHUFFLE_FUNC_SORT
endif
ifeq ($(USE_MASK_INSTEAD_OF_IF_BRANCH), 1)
CCARG	+= -DUSE_MASK_INSTEAD_OF_IF
CUARG	+= -DUSE_MASK_INSTEAD_OF_IF
endif
ifeq ($(USE_SPLITTED_LSD_SORT), 1)
CCARG	+= -DUSE_LSD_GRID_SORT_FUNC -DUSE_SPLITTED_GRID_SORT_FUNC
CUARG	+= -DUSE_LSD_GRID_SORT_FUNC -DUSE_SPLITTED_GRID_SORT_FUNC
endif
ifeq ($(USE_SINGLE_LSD_SORT), 1)
CCARG	+= -DUSE_LSD_GRID_SORT_FUNC
CUARG	+= -DUSE_LSD_GRID_SORT_FUNC
endif
ifeq ($(USE_SLICED_MSD_SORT), 1)
CCARG	+= -DUSE_SLICED_GRID_SORT_FUNC
CUARG	+= -DUSE_SLICED_GRID_SORT_FUNC
endif
ifeq ($(USE_SPLITTED_MSD_SORT), 1)
CCARG	+= -DUSE_SPLITTED_GRID_SORT_FUNC
CUARG	+= -DUSE_SPLITTED_GRID_SORT_FUNC
endif
endif
#################################################################################################


#################################################################################################
INTELCC	:= 1
CUDAGPU	:= 1
USEOMP	:= 1
USEMPI	:= 1
USEGSL	:= 1
PLPLOT	:= 1
#################################################################################################
# CUDAVER	:= 5.5
# CUDAVER	:= 6.0
# CUDAVER	:= 6.5
# CUDAVER	:= 7.0
# CUDAVER	:= RC/7.5
CUDAVER	:= 7.5
#################################################################################################


#################################################################################################
## Executing environment
HOSTNAME	:= $(shell hostname)
MYDIR	:= $(HOME)
#################################################################################################
MYINC	:= $(MYDIR)/inc
MYLIB	:= $(MYDIR)/lib
include	$(MYINC)/common.mk
#################################################################################################
CUARG	+= -lineinfo
#################################################################################################


#################################################################################################
## Source Directories
SRCDIR	:= .
SORTDIR	:= $(SRCDIR)/.
MISCDIR	:= ../misc
VPATH	:= $(SORTDIR) $(MISCDIR)
#################################################################################################
## Executable(s)
RSORT	:= $(BINDIR)/radix
#################################################################################################
## source file(s)
SORTSRC	:= radix_dev.cu
CC_FILE	+= $(MAINDIR)/$(SORTSRC)
#################################################################################################


#################################################################################################
## Object files
#################################################################################################
OBJSORT	:= $(patsubst %.cu, $(OBJDIR)/%.o, $(notdir $(SORTSRC)))
#################################################################################################


#################################################################################################
## Rules
#################################################################################################
all:	TAGS $(RSORT)
#################################################################################################
sort:	TAGS $(RSORT)
#################################################################################################
## Making TAGS file for Emacs
TAGS:
	$(VERBOSE)find $(SRCDIR) -name "*.[ch]" -print | etags -
#################################################################################################
## CUDA/C code
$(RSORT):	$(OBJSORT)
	$(VERBOSE)$(CC) $(CCFLAG) $(CCDBG) $(PROFILE) -o $@ $(OBJSORT) $(CCLIB) $(CULIB) -L$(MYLIB) -l$(LIBPREC)cudalib
#################################################################################################
# original version
check-syntax:
	$(CC) $(DEBUG) $(CCFLAG) $(CCARG) -fsyntax-only $(CCINC) $(OMPINC) $(MPIINC) $(GSLINC) $(PLINC) -I/$(HOME)/tau/include $(HDF5INC) $(SILOINC) $(PREC) $(UNIT) $(CHK_SOURCES)
check-syntax-cu:
	$(CU) $(DEBUG) $(CUARG) -Xcompiler -fsyntax-only $(CCINC) $(CUINC) $(OMPINC) $(MPIINC) $(GSLINC) $(PLINC) -I/$(HOME)/tau/include $(HDF5INC) $(SILOINC) $(PREC) $(UNIT) -o /dev/null -c $(CHK_SOURCES)
#################################################################################################
depend:
	makedepend -- $(CCINC) $(CUINC) $(OMPINC) $(MPIINC) $(GSLINC) $(PLINC) -I/$(HOME)/tau/include -- $(CC_FILE) $(CU_FILE)
#################################################################################################
dir:
	$(VERBOSE)mkdir -p $(BINDIR)
	$(VERBOSE)mkdir -p $(OBJDIR)
	$(VERBOSE)mkdir -p $(ASMDIR)
	$(VERBOSE)mkdir -p $(PTXDIR)
	$(VERBOSE)mkdir -p dat doc fig log bench
#################################################################################################
# zip:
# 	if [ ! -d pub ]; then \
# 	$(VERBOSE)mkdir pub; \
# 	fi
# 	$(VERBOSE)tar cvJf $(DATE)tree.tar.xz README Makefile $(SRCDIR) sh cfg host plt
# 	$(VERBOSE)mv       $(DATE)tree.tar.xz pub/
#################################################################################################
clean:
	$(VERBOSE)rm -f TAGS gmon.out
	$(VERBOSE)rm -rf $(BINDIR)
	$(VERBOSE)rm -rf dat doc fig log
#################################################################################################
help:
	@echo "This code is compiled on $(HOSTNAME)"
	@echo "usage:\tmake [<target>]"
	@echo "clean:\tdelete all executable files and tentative files."
	@echo "help:\tshow help message."
#################################################################################################


#################################################################################################
## Dependence
#################################################################################################
## $(SORTDIR)/*
$(OBJDIR)/radix_dev.o:	Makefile	\
	$(MYINC)/macro.h	$(MYINC)/cudalib.h	$(MISCDIR)/gsync_dev.cu	\
	$(SORTDIR)/radix_dev.h	$(SORTDIR)/radix_inc.h	$(SORTDIR)/radix_del.h	$(SORTDIR)/radix_inc.cu
#################################################################################################
#################################################################################################
