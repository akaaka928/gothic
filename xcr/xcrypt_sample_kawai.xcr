# Sumit multiple jobs simultaneously
use base qw(limit core);
use File::Copy;
limit::initialize(8);

$id_name = "p3d_mixprec";
$num_trials = 5;

# my @data_type = ("dd", "sd", "ss", "hd", "hs", "dd_opt1", "sd_opt1", "ss_opt1", "hd_opt1", "hs_opt1", "dd_opt2", "sd_opt2", "ss_opt2", "hd_opt2", "hs_opt2", "dd_opt3", "sd_opt3", "ss_opt3", "hd_opt3", "hs_opt3");
my @data_type = ("dd", "sd", "ss", "hd", "hs", "dd_opt1", "sd_opt1", "ss_opt1", "hd_opt1", "hs_opt1", "dd_opt2", "sd_opt2", "ss_opt2", "hd_opt2", "hs_opt2");
$num_types = scalar @data_type;

for (my $i = 0; $i < $num_types; $i++) {
    $name_exec[$i] = './es_simd_'.$data_type[$i];
    $name_exec_cp[$i] = '../es_simd_'.$data_type[$i];
}

my $chunk_min = 3;
my $chunk_max = 13;
my $num_patterns = $chunk_min - $chunk_max + 1;
for (my $i = 0; $i < $num_patterns; $i++) {
   $size_chunk[$i] = 2 ** $i;
}

%template = (
    'id' => "$id_name",
    'RANGE0' => [0..$num_types-1],
    'RANGE1' => [$chunk_min..$chunk_max],
    'RANGE2' => [0..$num_trials-1],
     
    'exe0'    => 'cat envs.sh',
    'exe1'    => 'source ./envs.sh',
    'exe2'    => 'DIR=`hostname`',
    'exe3'    => 'mkdir -p $DIR',
    'exe4'    => 'cd $DIR',
    'exe5'    => 'cp ../INPUT.DAT ',
    'arg5_0@' => sub {$name_exec_cp[$VALUE[0]]},
    'arg5_1'  => ' ./',
    'exe6'    => 'sed -i \'7s/256 8  /256 ',
    'arg6_0@' => sub {2**$VALUE[1]},
    'arg6_1'  => '/\' INPUT.DAT',
    'exe7@'   => sub {$name_exec[$VALUE[0]]},
    'exe8'    => 'cd ../',
    'exe9'    => 'rm -rf $DIR',
    
    'JS_queue'  => 'fx',
    'JS_phnode' => 1,
    'JS_node'   => 1,
    'JS_cpu'    => 48,
#    'JS_limit_time' => 600,
    'before' => sub {
        print "Submitting $self->{id}\n";
    },
    'after' => sub {
        print "$self->{id} finished\n";
    }
    );
prepare_submit_sync (%template);
